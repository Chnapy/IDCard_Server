/*
 * This file is generated by jOOQ.
 */
package bdd.generated.tables.records;

import bdd.generated.tables.Visibilite;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
		value = {
			"http://www.jooq.org",
			"jOOQ version:3.9.1"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class VisibiliteRecord extends UpdatableRecordImpl<VisibiliteRecord> implements Record2<Long, Long> {

	private static final long serialVersionUID = 1248869030;

	/**
	 * Setter for <code>public.visibilite.id_valeur</code>.
	 */
	public void setIdValeur(Long value) {
		set(0, value);
	}

	/**
	 * Getter for <code>public.visibilite.id_valeur</code>.
	 */
	public Long getIdValeur() {
		return (Long) get(0);
	}

	/**
	 * Setter for <code>public.visibilite.id_domaine</code>.
	 */
	public void setIdDomaine(Long value) {
		set(1, value);
	}

	/**
	 * Getter for <code>public.visibilite.id_domaine</code>.
	 */
	public Long getIdDomaine() {
		return (Long) get(1);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<Long, Long> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------
	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Long, Long> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Long, Long> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Visibilite.VISIBILITE.ID_VALEUR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return Visibilite.VISIBILITE.ID_DOMAINE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getIdValeur();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getIdDomaine();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VisibiliteRecord value1(Long value) {
		setIdValeur(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VisibiliteRecord value2(Long value) {
		setIdDomaine(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VisibiliteRecord values(Long value1, Long value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------
	/**
	 * Create a detached VisibiliteRecord
	 */
	public VisibiliteRecord() {
		super(Visibilite.VISIBILITE);
	}

	/**
	 * Create a detached, initialised VisibiliteRecord
	 */
	public VisibiliteRecord(Long idValeur, Long idDomaine) {
		super(Visibilite.VISIBILITE);

		set(0, idValeur);
		set(1, idDomaine);
	}
}
