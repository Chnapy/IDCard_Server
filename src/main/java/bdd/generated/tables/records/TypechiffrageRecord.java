/*
 * This file is generated by jOOQ.
*/
package bdd.generated.tables.records;


import bdd.generated.tables.Typechiffrage;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypechiffrageRecord extends UpdatableRecordImpl<TypechiffrageRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 498526085;

    /**
     * Setter for <code>public.typechiffrage.id_typechiffrage</code>.
     */
    public void setIdTypechiffrage(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.typechiffrage.id_typechiffrage</code>.
     */
    public Integer getIdTypechiffrage() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.typechiffrage.typechiffrage</code>.
     */
    public void setTypechiffrage(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.typechiffrage.typechiffrage</code>.
     */
    public String getTypechiffrage() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Typechiffrage.TYPECHIFFRAGE.ID_TYPECHIFFRAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Typechiffrage.TYPECHIFFRAGE.TYPECHIFFRAGE_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdTypechiffrage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTypechiffrage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypechiffrageRecord value1(Integer value) {
        setIdTypechiffrage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypechiffrageRecord value2(String value) {
        setTypechiffrage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypechiffrageRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TypechiffrageRecord
     */
    public TypechiffrageRecord() {
        super(Typechiffrage.TYPECHIFFRAGE);
    }

    /**
     * Create a detached, initialised TypechiffrageRecord
     */
    public TypechiffrageRecord(Integer idTypechiffrage, String typechiffrage) {
        super(Typechiffrage.TYPECHIFFRAGE);

        set(0, idTypechiffrage);
        set(1, typechiffrage);
    }
}
