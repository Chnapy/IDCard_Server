/*
 * This file is generated by jOOQ.
*/
package bdd.generated.tables;


import bdd.generated.Keys;
import bdd.generated.Public;
import bdd.generated.tables.records.ValeurRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Valeur extends TableImpl<ValeurRecord> {

    private static final long serialVersionUID = 568745020;

    /**
     * The reference instance of <code>public.valeur</code>
     */
    public static final Valeur VALEUR = new Valeur();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ValeurRecord> getRecordType() {
        return ValeurRecord.class;
    }

    /**
     * The column <code>public.valeur.id_valeur</code>.
     */
    public final TableField<ValeurRecord, Long> ID_VALEUR = createField("id_valeur", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('valeur_id_valeur_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.valeur.id_propriete</code>.
     */
    public final TableField<ValeurRecord, Long> ID_PROPRIETE = createField("id_propriete", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.valeur.principale</code>.
     */
    public final TableField<ValeurRecord, Boolean> PRINCIPALE = createField("principale", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.valeur.id_valeurtypee</code>.
     */
    public final TableField<ValeurRecord, Long> ID_VALEURTYPEE = createField("id_valeurtypee", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.valeur.id_user</code>.
     */
    public final TableField<ValeurRecord, Long> ID_USER = createField("id_user", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.valeur</code> table reference
     */
    public Valeur() {
        this("valeur", null);
    }

    /**
     * Create an aliased <code>public.valeur</code> table reference
     */
    public Valeur(String alias) {
        this(alias, VALEUR);
    }

    private Valeur(String alias, Table<ValeurRecord> aliased) {
        this(alias, aliased, null);
    }

    private Valeur(String alias, Table<ValeurRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ValeurRecord, Long> getIdentity() {
        return Keys.IDENTITY_VALEUR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ValeurRecord> getPrimaryKey() {
        return Keys.VALEUR_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ValeurRecord>> getKeys() {
        return Arrays.<UniqueKey<ValeurRecord>>asList(Keys.VALEUR_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ValeurRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ValeurRecord, ?>>asList(Keys.VALEUR__PROPRIETE_VALEUR_FK, Keys.VALEUR__USER_1_VALEUR_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Valeur as(String alias) {
        return new Valeur(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Valeur rename(String name) {
        return new Valeur(name, null);
    }
}
