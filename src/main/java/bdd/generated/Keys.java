/*
 * This file is generated by jOOQ.
*/
package bdd.generated;


import bdd.generated.tables.Domaine;
import bdd.generated.tables.Propriete;
import bdd.generated.tables.Session;
import bdd.generated.tables.Sessionprop;
import bdd.generated.tables.Typefermeture;
import bdd.generated.tables.Typeprop;
import bdd.generated.tables.User_1;
import bdd.generated.tables.Valeur;
import bdd.generated.tables.Valeurbigint;
import bdd.generated.tables.Valeurboolean;
import bdd.generated.tables.Valeurdate;
import bdd.generated.tables.Valeurdouble;
import bdd.generated.tables.Valeurinteger;
import bdd.generated.tables.Valeurmdp;
import bdd.generated.tables.Valeurstring;
import bdd.generated.tables.Visibilite;
import bdd.generated.tables.records.DomaineRecord;
import bdd.generated.tables.records.ProprieteRecord;
import bdd.generated.tables.records.SessionRecord;
import bdd.generated.tables.records.SessionpropRecord;
import bdd.generated.tables.records.TypefermetureRecord;
import bdd.generated.tables.records.TypepropRecord;
import bdd.generated.tables.records.User_1Record;
import bdd.generated.tables.records.ValeurRecord;
import bdd.generated.tables.records.ValeurbigintRecord;
import bdd.generated.tables.records.ValeurbooleanRecord;
import bdd.generated.tables.records.ValeurdateRecord;
import bdd.generated.tables.records.ValeurdoubleRecord;
import bdd.generated.tables.records.ValeurintegerRecord;
import bdd.generated.tables.records.ValeurmdpRecord;
import bdd.generated.tables.records.ValeurstringRecord;
import bdd.generated.tables.records.VisibiliteRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DomaineRecord, Long> IDENTITY_DOMAINE = Identities0.IDENTITY_DOMAINE;
    public static final Identity<ProprieteRecord, Long> IDENTITY_PROPRIETE = Identities0.IDENTITY_PROPRIETE;
    public static final Identity<SessionRecord, Long> IDENTITY_SESSION = Identities0.IDENTITY_SESSION;
    public static final Identity<User_1Record, Long> IDENTITY_USER_1 = Identities0.IDENTITY_USER_1;
    public static final Identity<ValeurRecord, Long> IDENTITY_VALEUR = Identities0.IDENTITY_VALEUR;
    public static final Identity<ValeurbigintRecord, Long> IDENTITY_VALEURBIGINT = Identities0.IDENTITY_VALEURBIGINT;
    public static final Identity<ValeurbooleanRecord, Long> IDENTITY_VALEURBOOLEAN = Identities0.IDENTITY_VALEURBOOLEAN;
    public static final Identity<ValeurdateRecord, Long> IDENTITY_VALEURDATE = Identities0.IDENTITY_VALEURDATE;
    public static final Identity<ValeurdoubleRecord, Long> IDENTITY_VALEURDOUBLE = Identities0.IDENTITY_VALEURDOUBLE;
    public static final Identity<ValeurintegerRecord, Long> IDENTITY_VALEURINTEGER = Identities0.IDENTITY_VALEURINTEGER;
    public static final Identity<ValeurmdpRecord, Long> IDENTITY_VALEURMDP = Identities0.IDENTITY_VALEURMDP;
    public static final Identity<ValeurstringRecord, Long> IDENTITY_VALEURSTRING = Identities0.IDENTITY_VALEURSTRING;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DomaineRecord> DOMAINE_PK = UniqueKeys0.DOMAINE_PK;
    public static final UniqueKey<ProprieteRecord> PROPRIETE_PK = UniqueKeys0.PROPRIETE_PK;
    public static final UniqueKey<SessionRecord> SESSION_PK = UniqueKeys0.SESSION_PK;
    public static final UniqueKey<SessionpropRecord> SESSIONPROP_PK = UniqueKeys0.SESSIONPROP_PK;
    public static final UniqueKey<TypefermetureRecord> TYPEFERMETURE_PK = UniqueKeys0.TYPEFERMETURE_PK;
    public static final UniqueKey<TypepropRecord> TYPEPROP_PK = UniqueKeys0.TYPEPROP_PK;
    public static final UniqueKey<User_1Record> USER_1_PK = UniqueKeys0.USER_1_PK;
    public static final UniqueKey<ValeurRecord> VALEUR_PK = UniqueKeys0.VALEUR_PK;
    public static final UniqueKey<ValeurbigintRecord> VALEURBIGINT_PK = UniqueKeys0.VALEURBIGINT_PK;
    public static final UniqueKey<ValeurbooleanRecord> VALEURBOOLEAN_PK = UniqueKeys0.VALEURBOOLEAN_PK;
    public static final UniqueKey<ValeurdateRecord> VALEURDATE_PK = UniqueKeys0.VALEURDATE_PK;
    public static final UniqueKey<ValeurdoubleRecord> VALEURDOUBLE_PK = UniqueKeys0.VALEURDOUBLE_PK;
    public static final UniqueKey<ValeurintegerRecord> VALEURINTEGER_PK = UniqueKeys0.VALEURINTEGER_PK;
    public static final UniqueKey<ValeurmdpRecord> VALEURMDP_PK = UniqueKeys0.VALEURMDP_PK;
    public static final UniqueKey<ValeurstringRecord> VALEURSTRING_PK = UniqueKeys0.VALEURSTRING_PK;
    public static final UniqueKey<VisibiliteRecord> VISIBILITE_PK = UniqueKeys0.VISIBILITE_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ProprieteRecord, TypepropRecord> PROPRIETE__TYPEPROP_PROPRIETE_FK = ForeignKeys0.PROPRIETE__TYPEPROP_PROPRIETE_FK;
    public static final ForeignKey<SessionRecord, User_1Record> SESSION__USER_SESSION_FK = ForeignKeys0.SESSION__USER_SESSION_FK;
    public static final ForeignKey<SessionRecord, DomaineRecord> SESSION__DOMAINE_SESSION_FK = ForeignKeys0.SESSION__DOMAINE_SESSION_FK;
    public static final ForeignKey<SessionRecord, TypefermetureRecord> SESSION__TYPEFERMETURE_SESSION_FK = ForeignKeys0.SESSION__TYPEFERMETURE_SESSION_FK;
    public static final ForeignKey<SessionpropRecord, SessionRecord> SESSIONPROP__SESSION_SESSIONPROP_FK = ForeignKeys0.SESSIONPROP__SESSION_SESSIONPROP_FK;
    public static final ForeignKey<SessionpropRecord, ProprieteRecord> SESSIONPROP__PROPRIETE_SESSIONPROP_FK = ForeignKeys0.SESSIONPROP__PROPRIETE_SESSIONPROP_FK;
    public static final ForeignKey<ValeurRecord, ProprieteRecord> VALEUR__PROPRIETE_VALEUR_FK = ForeignKeys0.VALEUR__PROPRIETE_VALEUR_FK;
    public static final ForeignKey<ValeurRecord, User_1Record> VALEUR__USER_1_VALEUR_FK = ForeignKeys0.VALEUR__USER_1_VALEUR_FK;
    public static final ForeignKey<VisibiliteRecord, ValeurRecord> VISIBILITE__VALEUR_VISIBILITE_FK = ForeignKeys0.VISIBILITE__VALEUR_VISIBILITE_FK;
    public static final ForeignKey<VisibiliteRecord, DomaineRecord> VISIBILITE__DOMAINE_VISIBILITE_FK = ForeignKeys0.VISIBILITE__DOMAINE_VISIBILITE_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<DomaineRecord, Long> IDENTITY_DOMAINE = createIdentity(Domaine.DOMAINE, Domaine.DOMAINE.ID_DOMAINE);
        public static Identity<ProprieteRecord, Long> IDENTITY_PROPRIETE = createIdentity(Propriete.PROPRIETE, Propriete.PROPRIETE.ID_PROPRIETE);
        public static Identity<SessionRecord, Long> IDENTITY_SESSION = createIdentity(Session.SESSION, Session.SESSION.ID_SESSION);
        public static Identity<User_1Record, Long> IDENTITY_USER_1 = createIdentity(User_1.USER_1, User_1.USER_1.ID_USER);
        public static Identity<ValeurRecord, Long> IDENTITY_VALEUR = createIdentity(Valeur.VALEUR, Valeur.VALEUR.ID_VALEUR);
        public static Identity<ValeurbigintRecord, Long> IDENTITY_VALEURBIGINT = createIdentity(Valeurbigint.VALEURBIGINT, Valeurbigint.VALEURBIGINT.ID_VALEURTYPEE);
        public static Identity<ValeurbooleanRecord, Long> IDENTITY_VALEURBOOLEAN = createIdentity(Valeurboolean.VALEURBOOLEAN, Valeurboolean.VALEURBOOLEAN.ID_VALEURTYPEE);
        public static Identity<ValeurdateRecord, Long> IDENTITY_VALEURDATE = createIdentity(Valeurdate.VALEURDATE, Valeurdate.VALEURDATE.ID_VALEURTYPEE);
        public static Identity<ValeurdoubleRecord, Long> IDENTITY_VALEURDOUBLE = createIdentity(Valeurdouble.VALEURDOUBLE, Valeurdouble.VALEURDOUBLE.ID_VALEURTYPEE);
        public static Identity<ValeurintegerRecord, Long> IDENTITY_VALEURINTEGER = createIdentity(Valeurinteger.VALEURINTEGER, Valeurinteger.VALEURINTEGER.ID_VALEURTYPEE);
        public static Identity<ValeurmdpRecord, Long> IDENTITY_VALEURMDP = createIdentity(Valeurmdp.VALEURMDP, Valeurmdp.VALEURMDP.ID_VALEURTYPEE);
        public static Identity<ValeurstringRecord, Long> IDENTITY_VALEURSTRING = createIdentity(Valeurstring.VALEURSTRING, Valeurstring.VALEURSTRING.ID_VALEURTYPEE);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<DomaineRecord> DOMAINE_PK = createUniqueKey(Domaine.DOMAINE, "domaine_pk", Domaine.DOMAINE.ID_DOMAINE);
        public static final UniqueKey<ProprieteRecord> PROPRIETE_PK = createUniqueKey(Propriete.PROPRIETE, "propriete_pk", Propriete.PROPRIETE.ID_PROPRIETE);
        public static final UniqueKey<SessionRecord> SESSION_PK = createUniqueKey(Session.SESSION, "session_pk", Session.SESSION.ID_SESSION);
        public static final UniqueKey<SessionpropRecord> SESSIONPROP_PK = createUniqueKey(Sessionprop.SESSIONPROP, "sessionprop_pk", Sessionprop.SESSIONPROP.ID_SESSION, Sessionprop.SESSIONPROP.ID_PROPRIETE);
        public static final UniqueKey<TypefermetureRecord> TYPEFERMETURE_PK = createUniqueKey(Typefermeture.TYPEFERMETURE, "typefermeture_pk", Typefermeture.TYPEFERMETURE.ID_TYPEFERMETURE);
        public static final UniqueKey<TypepropRecord> TYPEPROP_PK = createUniqueKey(Typeprop.TYPEPROP, "typeprop_pk", Typeprop.TYPEPROP.ID_TYPEPROP);
        public static final UniqueKey<User_1Record> USER_1_PK = createUniqueKey(User_1.USER_1, "user_1_pk", User_1.USER_1.ID_USER);
        public static final UniqueKey<ValeurRecord> VALEUR_PK = createUniqueKey(Valeur.VALEUR, "valeur_pk", Valeur.VALEUR.ID_VALEUR);
        public static final UniqueKey<ValeurbigintRecord> VALEURBIGINT_PK = createUniqueKey(Valeurbigint.VALEURBIGINT, "valeurbigint_pk", Valeurbigint.VALEURBIGINT.ID_VALEURTYPEE);
        public static final UniqueKey<ValeurbooleanRecord> VALEURBOOLEAN_PK = createUniqueKey(Valeurboolean.VALEURBOOLEAN, "valeurboolean_pk", Valeurboolean.VALEURBOOLEAN.ID_VALEURTYPEE);
        public static final UniqueKey<ValeurdateRecord> VALEURDATE_PK = createUniqueKey(Valeurdate.VALEURDATE, "valeurdate_pk", Valeurdate.VALEURDATE.ID_VALEURTYPEE);
        public static final UniqueKey<ValeurdoubleRecord> VALEURDOUBLE_PK = createUniqueKey(Valeurdouble.VALEURDOUBLE, "valeurdouble_pk", Valeurdouble.VALEURDOUBLE.ID_VALEURTYPEE);
        public static final UniqueKey<ValeurintegerRecord> VALEURINTEGER_PK = createUniqueKey(Valeurinteger.VALEURINTEGER, "valeurinteger_pk", Valeurinteger.VALEURINTEGER.ID_VALEURTYPEE);
        public static final UniqueKey<ValeurmdpRecord> VALEURMDP_PK = createUniqueKey(Valeurmdp.VALEURMDP, "valeurmdp_pk", Valeurmdp.VALEURMDP.ID_VALEURTYPEE);
        public static final UniqueKey<ValeurstringRecord> VALEURSTRING_PK = createUniqueKey(Valeurstring.VALEURSTRING, "valeurstring_pk", Valeurstring.VALEURSTRING.ID_VALEURTYPEE);
        public static final UniqueKey<VisibiliteRecord> VISIBILITE_PK = createUniqueKey(Visibilite.VISIBILITE, "visibilite_pk", Visibilite.VISIBILITE.ID_VALEUR);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<ProprieteRecord, TypepropRecord> PROPRIETE__TYPEPROP_PROPRIETE_FK = createForeignKey(bdd.generated.Keys.TYPEPROP_PK, Propriete.PROPRIETE, "propriete__typeprop_propriete_fk", Propriete.PROPRIETE.ID_TYPEPROP);
        public static final ForeignKey<SessionRecord, User_1Record> SESSION__USER_SESSION_FK = createForeignKey(bdd.generated.Keys.USER_1_PK, Session.SESSION, "session__user_session_fk", Session.SESSION.ID_USER);
        public static final ForeignKey<SessionRecord, DomaineRecord> SESSION__DOMAINE_SESSION_FK = createForeignKey(bdd.generated.Keys.DOMAINE_PK, Session.SESSION, "session__domaine_session_fk", Session.SESSION.ID_DOMAINE);
        public static final ForeignKey<SessionRecord, TypefermetureRecord> SESSION__TYPEFERMETURE_SESSION_FK = createForeignKey(bdd.generated.Keys.TYPEFERMETURE_PK, Session.SESSION, "session__typefermeture_session_fk", Session.SESSION.ID_TYPEFERMETURE);
        public static final ForeignKey<SessionpropRecord, SessionRecord> SESSIONPROP__SESSION_SESSIONPROP_FK = createForeignKey(bdd.generated.Keys.SESSION_PK, Sessionprop.SESSIONPROP, "sessionprop__session_sessionprop_fk", Sessionprop.SESSIONPROP.ID_SESSION);
        public static final ForeignKey<SessionpropRecord, ProprieteRecord> SESSIONPROP__PROPRIETE_SESSIONPROP_FK = createForeignKey(bdd.generated.Keys.PROPRIETE_PK, Sessionprop.SESSIONPROP, "sessionprop__propriete_sessionprop_fk", Sessionprop.SESSIONPROP.ID_PROPRIETE);
        public static final ForeignKey<ValeurRecord, ProprieteRecord> VALEUR__PROPRIETE_VALEUR_FK = createForeignKey(bdd.generated.Keys.PROPRIETE_PK, Valeur.VALEUR, "valeur__propriete_valeur_fk", Valeur.VALEUR.ID_PROPRIETE);
        public static final ForeignKey<ValeurRecord, User_1Record> VALEUR__USER_1_VALEUR_FK = createForeignKey(bdd.generated.Keys.USER_1_PK, Valeur.VALEUR, "valeur__user_1_valeur_fk", Valeur.VALEUR.ID_USER);
        public static final ForeignKey<VisibiliteRecord, ValeurRecord> VISIBILITE__VALEUR_VISIBILITE_FK = createForeignKey(bdd.generated.Keys.VALEUR_PK, Visibilite.VISIBILITE, "visibilite__valeur_visibilite_fk", Visibilite.VISIBILITE.ID_VALEUR);
        public static final ForeignKey<VisibiliteRecord, DomaineRecord> VISIBILITE__DOMAINE_VISIBILITE_FK = createForeignKey(bdd.generated.Keys.DOMAINE_PK, Visibilite.VISIBILITE, "visibilite__domaine_visibilite_fk", Visibilite.VISIBILITE.ID_DOMAINE);
    }
}
